# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oj5h2su5fRj7kbJ96Thky2RX98fiy9G8
"""

import keras
from keras.models import Sequential
from keras.layers.core import Dense, Activation
from keras.optimizers import SGD
import numpy as np
from keras.datasets import mnist
import matplotlib.pyplot as plt

(train_images, train_labels), (test_images,test_labels) = mnist.load_data()

train_images.shape
x_train = train_images.reshape(60000, 784)
print(type(x_train))
print(x_train[:50])
x_test = test_images.reshape(10000, 784)
X_train = x_train.astype('float32')
x_test = x_test.astype('float32')
x_train /= 255
x_test /= 255

y_train = keras.utils.to_categorical(train_labels, 10)
y_test = keras.utils.to_categorical(test_labels, 10)
print(y_train.shape)
print(y_train[0:50])
print(train_labels[50])
print(y_train[50])

model = Sequential()
model.add(Dense(units=512, input_dim=784))
model.add(Activation('sigmoid'))
model.add(Dense(units=512))
model.add(Activation('sigmoid'))
model.add(Dense(units=10))
model.add(Activation('softmax'))

sgd = SGD(lr=0.3)
model.compile(loss='binary_crossentropy',optimizer='rmsprop',metrics=['accuracy'])
model.fit(x_train,y_train, batch_size=128,epochs=5)

imageIndex = 45
plt.imshow(test_images[imageIndex])
test_data = test_images.reshape((10000, 28*28))
test_data = test_data.astype('float32')/255
img = test_images[imageIndex].reshape((1, 28*28))
print(model.predict_classes(img))