# -*- coding: utf-8 -*-
"""CIFAR10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LrrdPoZhOFhyDlVyEIfSLYfHXAozUULf
"""

import keras
from keras.models import Sequential
from keras.layers.core import Dense, Activation
from keras.optimizers import SGD 
import numpy as np
from keras.datasets import cifar10
import matplotlib.pyplot as plt
from keras.layers import Dense, Dropout, Flatten 
from keras.layers import Conv2D, MaxPooling2D
from keras import backend as K
from keras import layers

(train_images, train_labels), (test_images,test_labels) = cifar10.load_data()

print(train_images.shape,test_images.shape)
print(train_labels.shape)

x_train = train_images.astype('float32')
x_test = test_images.astype('float32')
x_train /= 255
x_test /= 255
print('x_train shape:', x_train.shape)
print(x_train.shape[0], 'train samples')
print(x_test.shape[0], 'test samples')

y_train = keras.utils.to_categorical(train_labels, 10)
y_test = keras.utils.to_categorical(test_labels, 10)

modelInput=layers.Input(shape=(32,32,3))

x=modelInput
x = layers.Conv2D(32, kernel_size=(3, 3),activation='relu',padding="same")(x)
for i in range(5):
  ident=x
  print(x.shape)
  x=layers.Conv2D(32, kernel_size=(3, 3),activation='relu',padding="same")(x)
  print(x.shape)
  x=layers.Conv2D(32, kernel_size=(3, 3),activation='relu',padding="same")(x)
  print(x.shape)
  x=layers.add([ident,x])
flatten=layers.Flatten()(x)
dense=layers.Dense(10,activation="softmax")(flatten)
model=keras.models.Model(inputs=modelInput,outputs=dense)
model.compile(loss='categorical_crossentropy',
              optimizer='adam',
              metrics=['accuracy'])
history=model.fit(x_train, y_train,
          batch_size=50,
          epochs=10,
          verbose=1,
          validation_data=(x_test, y_test))